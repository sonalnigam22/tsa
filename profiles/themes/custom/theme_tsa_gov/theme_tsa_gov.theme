<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 * 
 * Example on how to alter theme settings form
 * 
 */
function theme_tsa_gov_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
      'bg-primary' => t('Primary'),
      'bg-secondary' => t('Secondary'),
      'bg-light' => t('Light'),
      'bg-dark' => t('Dark'),
      'bg-white' => t('White'),
      'bg-transparent' => t('Transparent'),
  );
  
  $form['fonts']['fonts']['bootstrap_barrio_google_fonts']['#options']['open_sans'] = 'Open Sans';
}

function theme_tsa_gov_preprocess_page(&$variables)
{
  $fonts = theme_get_setting('bootstrap_barrio_google_fonts');
  if ($fonts) {
    $variables['#attached']['library'][] = ( $fonts == 'open_sans' ? 'theme_tsa_gov' : 'bootstrap_barrio' ) . '/' . $fonts;
  }

  $variables['navbar_attributes']['class'][] = 'navbar-light';
}


function theme_tsa_gov_preprocess_views_view__events_view__upcoming_events(&$variables) {
	$view = &$variables['view'];
	$variables['#attached']['library'][] = 'theme_tsa_gov/addtoany_js';
    
  //kint($view->field);
  //echo"<pre>";print_R($view->get_title());
  /*if ($view->storage->id() == 'events_view' && $view->current_display  == 'upcoming_events') {
       //$variables['#attached']['library'][] = 'theme_tsa_gov/addtoany_js';
	   //echo"<pre>";print_r($variables['rows']);
	   foreach ($view->result as $row_id => $row) {
		   
		   foreach ($view->field as $field_id => $field ) {
			   if($field_id == 'field_event_start_date'){
				  $datevalue = strtotime($field->getValue($row));
		          //$values[$row_id][$field_id] = $field->getValue($row);
			   }
		   }
	   }
	  
	   //echo"<pre>";print_r($values[0]['field_event_start_date']);
  }*/ 
 // echo"<pre>";print_r(array_keys($view->result));

  //echo 'pranav';
}

function theme_tsa_gov_preprocess_views_view_field__events_view__upcoming_events__field_title(&$variables)
{
	
  $view = &$variables['view'];
  //echo $variables['row']->title;
  echo 'pandey';
  //$start_date = strtotime($variables['row']->node__field_start_date_field_start_date_value);
  //$variables['month'] = date('M', $start_date);
  //$variables['day'] = date('d', $start_date);
}



function theme_tsa_gov_preprocess_menu(&$variables) {
  
	
	
  if (isset($variables['menu_name']) && $variables['menu_name'] === 'account') { 
    foreach($variables['items'] as $key => $item) { 
		  $path = $item['url']->toString();	   	     
      switch($path) {
        case '/user/login':
		   if(\Drupal::currentUser()->isAuthenticated()){ 
               unset($variables['items'][$key]);
		   }
        break;          
      }           
    }
  }
} 